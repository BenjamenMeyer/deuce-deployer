[server]
port = 8080
host = 127.0.0.1

[app]
root = deuce.controllers.root.RootController
modules = deuce
debug = False
    [[errors]]
        404 = errors/404
        __force_dict__ = True

[logging]
log_directory = log

[loggers]
    [[root]]
        level = INFO
        handlers = syslog,
    [[deuce]]
        level = INFO
        handlers = syslog,
     [[py.warnings]]
        handlers = syslog,


[handlers]
    [[console]]
        level = DEBUG
        class = logging.StreamHandler
        formatter = standard
    [[logfile]]
        level = INFO
        class = logging.FileHandler
        formatter = standard
        filename = deuce.log
    [[syslog]]
        level = INFO
        class = logging.handlers.SysLogHandler
        formatter = standard
        address = /dev/log
    [[rotatelogfile]]
        level = INFO
        class = logging.handlers.RotatingFileHandler
        formatter = standard
        maxBytes = 400000000
        backupCount = 2
        filename = deuce.log
[formatters]
    [[standard]]
        format = '%(asctime)s %(levelname)-5.5s [%(name)s/%(lineno)d][%(threadName)s] [%(request_id)s] : %(message)s'

[block_storage_driver]
driver = deuce.drivers.disk.DiskStorageDriver
    [[options]]
        path = /home/test_data/deuce
    [[swift]]
        driver = deuce.drivers.swift.SwiftStorageDriver
        swift_module = deuce.util
        [[[testing]]]
            is_mocking = True
            username = User name
            password = Password
            auth_url = Auth Url
            storage_url = Storage Url

[metadata_driver]
driver = deuce.drivers.sqlite.SqliteStorageDriver
    [[cassandra]]
        cluster = <TBD>,
        keyspace = deucekeyspace
        db_module = cassandra
        [[[testing]]]
            is_mocking = True
    [[sqlite]]
        path = run/deuce.sqlite.db
        db_module = sqlite3
    [[mongodb]]
        path = deuce_mongo_unittest_vaultmeta
        url = mongodb://<TBD>
        db_file = /tmp/deuce_mongo_unittest_vaultmeta.db
        db_module = pymongo
        FileBlockReadSegNum = 1000
        maxFileBlockSegNum = 100000
        [[[testing]]]
            is_mocking = True

[api_configuration]
datacenter = iad
max_returned_num = 1000
default_returned_num = 80
